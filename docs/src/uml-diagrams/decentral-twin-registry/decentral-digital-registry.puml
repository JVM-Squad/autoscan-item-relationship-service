@startuml
skinparam monochrome true
skinparam shadowing false
skinparam defaultFontName "Architects daughter"


autonumber "<b>[000]"

participant "IRS" as IRS
participant "Discovery Finder" as DCF
participant "EDC Discovery Finder" as EDCDF
participant "EDC" as EDC
participant "Decentral Twin Registry" as DTR

IRS -> DCF: POST /api/administration/connectors/discovery/search { "types": [ "bpn" ] }
IRS <-- DCF: array of endpoints
note left
    In case of error.
    Retry counter: Repeat call 3 times.
    If call not succeed create a tombstone.
end note
loop for each $endpoints
    IRS -> EDCDF : POST /api/administration/connectors/discovery [ "BPNL..." ]
    alt
         IRS <-- EDCDF : array of connectorEndpoints
         note left
                 [
                   {
                     "bpn": "string",
                     "connectorEndpoint": [
                       "string"
                     ]
                   }
                 ]
         end note
           loop for each $connectorEndpoints
                      IRS -> CONSUMER_EDC: Request Contract Offers {filter": "asset:prop:type=data.core.digitalTwinRegistry"}
                                note left
                                GET /api/v1/management/catalog

                                      "asset": {
                                      				"id": "registry-asset",
                                      				"createdAt": 1684151062604,
                                      				"properties": {
                                      					"asset:prop:byteSize": null,
                                      					"asset:prop:name": "Digital Twin Registry Endpoint of IRS DEV",
                                      					"asset:prop:contenttype": "application/json",
                                      					"asset:prop:policy-id": "use-eu",
                                      					"asset:prop:id": "registry-asset",
                                      					"asset:prop:fileName": null,
                                      					"asset:prop:type": "data.core.digitalTwinRegistry"
                                      				}
                                      			}
                      end note
                      IRS <-- CONSUMER_EDC: Contract Offers
                      IRS -> CONSUMER_EDC: Negotiate Contract for Offers
                      IRS <-- CONSUMER_EDC: Contract Negotiation (Contract Agreement ID))
                      IRS -> CONSUMER_EDC: Initiate Transfer with Agreement ID
                      IRS <-- CONSUMER_EDC: Transfer Process ID
                      CONSUMER_EDC -> PROVIDER_EDC: IDS Data Transfer
                      CONSUMER_EDC <-- PROVIDER_EDC: Data Plane Endpoint + Token
                      note left
                           Token contains baseUrl to aas registry

                            {
                             	"id": "1701f7b6-e5fb-4cea-8196-391df58a8916",
                             	"endpoint": "https://irs-consumer-dataplane.dev.demo.catena-x.net/api/public",
                             	"authKey": "Authorization",
                             	"authCode": "eyJoZUhBa....",
                             	"properties": {
                             		"cid": "dea8de11-b176-4d4b-a8c5-24c35cfd45ba:c54025a3-208e-479a-9370-a4cca3b3967d"
                             	}
                             }
                      end note
                      IRS <-- CONSUMER_EDC : Data Plane Endpoint + Token
                      IRS --> CONSUMER_EDC: Lookup Shells
                      note left
                         GET /api/public/lookup/shells/{globalAssetId}
                         Header: Token
                         Parameter: globalAssetId
                      end note
                      IRS <-- CONSUMER_EDC: aas identifier for globalAssetId (urn:uuid)
                      IRS -> CONSUMER_EDC: GET aas shell by identifier
                      note left
                         GET  /api/public/registry/shell-descriptors/{identifier}
                         Header: Token
                      end note
                     CONSUMER_EDC -> DTR : GET aas shell by identifier
                     CONSUMER_EDC <-- DTR: aas payload
                     IRS <-- CONSUMER_EDC: aas payload for identifier

                  end loop

end loop

@enduml
