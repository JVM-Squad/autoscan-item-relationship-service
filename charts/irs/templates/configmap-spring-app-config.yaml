apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "irs.fullname" . }}-configmap
  namespace: {{ .Values.namespace }}
data:
  application.yaml: |-
    # Config overriding Spring Boot configuration
    {{- if not .Values.config.override }}
    server:
      trustedPort: {{ .Values.service.trustedPort }}

    irs:
      apiUrl: {{ tpl (.Values.irsUrl | default "http://localhost") . | quote }}

    blobstore:
      endpoint: {{ tpl (.Values.minioUrl | default "") . | quote }}
      accessKey: "${MINIO_ACCESS_KEY}" # taken from secret ENV
      secretKey: "${MINIO_SECRET_KEY}" # taken from secret ENV

    spring:
      security:
        oauth2:
          client:
            registration:
              keycloak:
                client-id: "${KEYCLOAK_OAUTH2_CLIENT_ID}" # taken from secret ENV
                client-secret: "${KEYCLOAK_OAUTH2_CLIENT_SECRET}" # taken from secret ENV
            provider:
              keycloak:
                token-uri: {{ tpl (.Values.keycloak.oauth2.clientTokenUri | default "http://localhost") . | quote }}
          resourceserver:
            jwt:
              jwk-set-uri: {{ tpl (.Values.keycloak.oauth2.jwkSetUri | default "http://localhost") . | quote }}

    digitalTwinRegistry:
      descriptorEndpoint: {{ tpl (.Values.digitalTwinRegistry.descriptorEndpoint | default "") . | quote }}
      shellLookupEndpoint: {{ tpl (.Values.digitalTwinRegistry.shellLookupEndpoint | default "")  . | quote }}

    semanticshub:
      url: {{ tpl (.Values.semanticshub.url | default "")  . | quote }}
      modelJsonSchemaEndpoint: {{ tpl (.Values.semanticshub.modelJsonSchemaEndpoint | default "")  . | quote }}
      defaultUrns: {{ tpl (.Values.semanticshub.defaultUrns | default "") . | quote }}
      {{- if .Values.semanticshub.localModels }}
      localModelDirectory: /app/semantic-models
      {{- end }}

    bpdm:
      bpnEndpoint: {{ tpl (.Values.bpdm.bpnEndpoint | default "")  . | quote }}

    edc:
      controlplane:
        request-ttl: {{ .Values.edc.controlplane.request.ttl | default "PT10M" | quote }}
        endpoint:
          data: {{ tpl (.Values.edc.controlplane.endpoint.data | default (printf "http://%s%s" .Release.Name "-edc-controlplane:8181/data")) . | quote }}
        provider-suffix: {{ tpl .Values.edc.controlplane.provider.suffix . | quote }}
        catalog-limit: {{ .Values.edc.controlplane.catalog.limit }}
        catalog-page-size: {{ .Values.edc.controlplane.catalog.pagesize }}
        api-key:
          header: {{ tpl (.Values.edc.controlplane.apikey.header | default "") . | quote }}
          secret: ${EDC_API_KEY_SECRET:} # taken from secret ENV

      submodel:
        request-ttl: {{ tpl .Values.edc.submodel.request.ttl . | default "PT10M" | quote }}
        path: {{ tpl (.Values.edc.submodel.path | default "/submodel") . | quote }}
        urn-prefix: {{ tpl (.Values.edc.submodel.urnprefix | default "/urn") . | quote }}
    {{- end }}
    {{- if .Values.config.content }}
    {{- tpl (toYaml .Values.config.content) . | nindent 4 }}
    {{- end }}
