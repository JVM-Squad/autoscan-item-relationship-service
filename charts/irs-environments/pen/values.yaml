item-relationship-service:
  #####################
  # IRS Configuration #
  #####################
  irsUrl: "https://irs-pen.int.demo.catena-x.net"
  bpn: BPNL00000001CRHK
  apiKeyAdmin: <path:traceability-irs/data/int/irs#apiKeyAdmin>
  apiKeyRegular: <path:traceability-irs/data/int/irs#apiKeyRegular>
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - host: "irs-pen.int.demo.catena-x.net"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - "irs-pen.int.demo.catena-x.net"
        secretName: tls-secret
  digitalTwinRegistry:
    url: https://semantics-pen.dev.demo.catena-x.net/registry
  discovery:
    discoveryFinderUrl: https://semantics-pen.dev.demo.catena-x.net/discoveryfinder/api/administration/connectors/discovery/search
  semanticshub:
    url: https://semantics-pen.dev.demo.catena-x.net/hub/api/v1/models
    pageSize: "200"
  bpdm:
    url: https://partners-pool-pen.dev.demo.catena-x.net
  minioUser: <path:traceability-irs/data/int/minio#minioUser>
  minioPassword: <path:traceability-irs/data/int/minio#minioPassword>
  oauth2:
    clientTokenUri: <path:traceability-irs/data/pen/oauth2#tokenUri>
    semantics:
      clientId: <path:traceability-irs/data/pen/oauth2#clientId>
      clientSecret: <path:traceability-irs/data/pen/oauth2#clientSecret>
    discovery:
      clientId: <path:traceability-irs/data/pen/oauth2#clientId>
      clientSecret: <path:traceability-irs/data/pen/oauth2#clientSecret>
    bpdm:
      clientId: <path:traceability-irs/data/pen/oauth2#clientId>
      clientSecret: <path:traceability-irs/data/pen/oauth2#clientSecret>
  edc:
    submodel:
      request:
        ttl: PT2M
    controlplane:
      request:
        ttl: PT2M
      apikey:
        secret: <path:traceability-irs/data/pen/controlplane#apiKey>

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 1Gi


  #######################
  # Minio Configuration #
  #######################
  minio:
    rootUser: <path:traceability-irs/data/int/minio#minioUser>
    rootPassword: <path:traceability-irs/data/int/minio#minioPassword>
    serviceAccount:
      name: "irs-pen-minio-sa"


tractusx-connector:
  install:
    postgresql: false
    daps: false
    vault: false
  participant:
    id: <path:traceability-irs/data/int/controlplane#participantId>

  controlplane:
    # SSI configuration
    ssi:
      miw:
        url: <path:traceability-irs/data/int/controlplane#ssi.miw.url>
        authorityId: <path:traceability-irs/data/int/controlplane#ssi.miw.authorityId>
      oauth:
        tokenurl: <path:traceability-irs/data/int/controlplane#ssi.oauth.tokenurl>
        client:
          id: <path:traceability-irs/data/pen/controlplane#ssi.oauth.client.id>
          secretAlias: miw-pen-keycloak-secret
    ingresses:
      - enabled: true
        hostname: "irs-consumer-controlplane-pen.int.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - protocol
          - management
        tls:
          enabled: true
          secretName: tls-secret

    endpoints:
      # -- data management api, used by internal users, can be added to an ingress and must not be internet facing
      management:
        port: 8081
        path: /management
        authKey: <path:traceability-irs/data/int/controlplane#apiKey>  # -- authentication key, must be attached to each 'X-Api-Key' request header
      # -- protocol api, used for inter connector communication and must be internet facing
      protocol:
        port: 8084
        path: /api/v1/dsp

    internationalDataSpaces:
      id: TXDC
      description: Tractus-X Eclipse IDS Data Space Connector
      title: "IRS PEN Consumer EDC"
      maintainer: ""
      curator: ""
      catalogId: TXDC-Catalog

    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 1Gi

  dataplane:
    ingresses:
      - enabled: true
        hostname: "irs-consumer-dataplane-pen.int.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - public
        className: "nginx"
        tls:
          enabled: true
          secretName: tls-secret

    endpoints:
      public:
        port: 8081
        path: /api/public

    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 512Mi

  # URL where the EndpointDataReference callback will be sent to
  backendService:
    httpProxyTokenReceiverUrl: "http://app-irs-pen-item-relationship-service:8181/internal/endpoint-data-reference"

  ################################
  # EDC Vault/DAPS Configuration #
  ################################
  vault:
    hashicorp:
      url: "https://vault.demo.catena-x.net"
      token: "<path:traceability-irs/data/int/controlplane#vaultToken>"
      timeout: 30
      healthCheck:
        enabled: true
        standbyOk: true
      paths:
        secret: /v1/traceability-irs
        health: /v1/sys/health
    secretNames:
      transferProxyTokenSignerPrivateKey: irs-int-daps-key
      transferProxyTokenSignerPublicKey: irs-int-daps-cert
      transferProxyTokenEncryptionAesKey: test-edc-encryption-key

  ##################################
  # EDC Postgres Configuration #
  ##################################
  postgresql:
    enabled: true
    auth:
      username: <path:traceability-irs/data/int/controlplane#databaseuser>
      password: <path:traceability-irs/data/int/controlplane#databasepassword>
    username: <path:traceability-irs/data/int/controlplane#databaseuser>
    password: <path:traceability-irs/data/int/controlplane#databasepassword>
    jdbcUrl: "jdbc:postgresql://app-irs-pen-edc-postgresql-hl:5432/edc"

##############################
# EDC Postgres Configuration #
##############################
# EDC chart do not support multiple postgres instances in the same namespace at the moment.
# Enable this to use the postgres dependency for when you want to deploy multiple EDC instances in one namespace
postgresql:
  enabled: true
edc-postgresql:
  auth:
    database: edc
    username: <path:traceability-irs/data/int/controlplane#databaseuser>
    postgresPassword: <path:traceability-irs/data/int/controlplane#databasepassword>
    password: <path:traceability-irs/data/int/controlplane#databasepassword>
