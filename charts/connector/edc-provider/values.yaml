tractusx-connector:
  install:
    postgresql: false
    vault: false
  participant:
    id: <path:traceability-irs/data/dev/controlplane#participantId>

  iatp:
    # Decentralized IDentifier
    id: <path:traceability-irs/data/dev/controlplane#DID>
    sts:
      dim:
        url: <path:traceability-irs/data/dev/controlplane#dimUrl>
      oauth:
        token_url: <path:traceability-irs/data/dev/controlplane#ssi.oauth.tokenurl>
        client:
          id: <path:traceability-irs/data/dev/controlplane#dimClientId>
          secret_alias: edc-test-miw-keycloak-secret

  controlplane:
    ingresses:
      - enabled: false

    bdrs:
      # time that a cached BPN/DID resolution map is valid in seconds, default is 10 min
      cache_validity_seconds: 600
      server:
        # URL of the BPN/DID Resolution Service - required:
        url: <path:traceability-irs/data/dev/controlplane#bdrsUrl>

    endpoints:
      management:
        authKey: <path:traceability-irs/data/dev/controlplane#apiKey>

    # Files system has to be set to writeable for now since controlplane relies on temporary files to write SSI related things to
    securityContext:
      readOnlyRootFilesystem: false

    resources:
      limits:
        cpu: '1.5'
        memory: 2Gi
      requests:
        cpu: 300m
        memory: 2Gi

    livenessProbe:
      enabled: true
      initialDelaySeconds: 15
    readinessProbe:
      enabled: true
      initialDelaySeconds: 15

  dataplane:
    ingresses:
      - enabled: false

    token:
      refresh:
        expiry_seconds: 300
        expiry_tolerance_seconds: 10
        # optional URL that can be provided where clients go to refresh tokens.
        refresh_endpoint:
      signer:
        # alias under which the private key is stored in the vault (JWK or PEM format)
        privatekey_alias:
      verifier:
        # alias under which the public key is stored in the vault, that belongs to the private key ("privatekey_alias", JWK or PEM format)
        publickey_alias:

    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 512Mi


    livenessProbe:
      enabled: true
      initialDelaySeconds: 15
    readinessProbe:
      enabled: true
      initialDelaySeconds: 15

  ################################
  # EDC Vault/DAPS Configuration #
  ################################
  vault:
    hashicorp:
      url: "https://vault.demo.catena-x.net"
      token: "<path:traceability-irs/data/dev/controlplane#vaultToken>"
      timeout: 30
      healthCheck:
        enabled: true
        standbyOk: true
      paths:
        secret: /v1/traceability-irs
        health: /v1/sys/health
    secretNames:
      transferProxyTokenSignerPrivateKey:
      transferProxyTokenSignerPublicKey:
      transferProxyTokenEncryptionAesKey:

  ##################################
  # EDC Postgres Configuration #
  ##################################
  postgresql:
    enabled: true
    auth:
      username: "<path:traceability-irs/data/dev/controlplane#databaseuser>"
      password: "<path:traceability-irs/data/dev/controlplane#databasepassword>"
    username: "<path:traceability-irs/data/dev/controlplane#databaseuser>"
    password: "<path:traceability-irs/data/dev/controlplane#databasepassword>"
    jdbcUrl: "jdbc:postgresql://irs-provider-edc-postgresql-hl:5432/edc"

##############################
# EDC Postgres Configuration #
##############################
# EDC chart do not support multiple postgres instances in the same namespace at the moment.
# Enable this to use the postgres dependency for when you want to deploy multiple EDC instances in one namespace
postgresql:
  enabled: true
edc-postgresql:
  primary:
    resources:
      requests:
        memory: 1Gi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 1
  auth:
    database: edc
    username: <path:traceability-irs/data/dev/controlplane#databaseuser>
    postgresPassword: <path:traceability-irs/data/dev/controlplane#databasepassword>
    password: <path:traceability-irs/data/dev/controlplane#databasepassword>
