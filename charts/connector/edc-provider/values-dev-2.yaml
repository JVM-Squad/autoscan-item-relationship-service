tractusx-connector:
  participant:
    id: BPNL00000003CRHK

  controlplane:
    ingresses:
      - enabled: true
        hostname: "irs-provider-controlplane2.dev.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - protocol
          - management
        tls:
          enabled: true
          secretName: tls-secret

  dataplane:
    ingresses:
      - enabled: true
        hostname: "irs-provider-dataplane2.dev.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - public
        className: "nginx"
        tls:
          enabled: true
          secretName: tls-secret

  backendService:
    httpProxyTokenReceiverUrl: "https://irs-submodel-server.dev.demo.catena-x.net/data/endpoint-data-reference-provider2"

  vault:
    secretNames:
      transferProxyTokenSignerPrivateKey: dev-provider2-key
      transferProxyTokenSignerPublicKey: dev-provider2-cert
      transferProxyTokenEncryptionAesKey: test-edc-encryption-key
      dapsPrivateKey: dev-provider2-key
      dapsPublicKey: dev-provider2-cert

  daps:
    clientId: <path:traceability-irs/data/dev/controlplane#edc.oauth.client.id-provider2>

  postgresql:
    jdbcUrl: "jdbc:postgresql://irs-provider2-edc-postgresql-hl:5432/edc"
